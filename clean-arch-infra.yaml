# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-3.4.4
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: clean-arch
  name: clean-arch
spec:
  containers:
  - args:
    - mysqld
    image: docker.io/library/mysql:5.7
    name: mysql
    ports:
    - containerPort: 3306
      hostPort: 3306
    securityContext:
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
    env:
    - name: MYSQL_ROOT_PASSWORD
      value: root
    - name: MYSQL_DATABASE
      value: orders
    - name: MYSQL_PASSWORD
      value: root
    volumeMounts:
    - mountPath: /var/lib/mysql
      name: home-rodrigo-projects-golang-expert-desafio-clean-architecture-.docker-mysql-host-0
  - args:
    - rabbitmq-server
    image: docker.io/library/rabbitmq:3-management
    name: rabbitmq
    ports:
    - containerPort: 5672
      hostPort: 5672
    - containerPort: 15672
      hostPort: 15672
    securityContext:
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
    volumeMounts:
    - mountPath: /var/lib/rabbitmq
      name: c08d489344ea56c220f6fb0572d244a5ff3a4a75cb46bfbec7946822777bc0f2-pvc
  restartPolicy: Never
  volumes:
  - hostPath:
      path: /home/rodrigo/projects/golang-expert/desafio-clean-architecture/.docker/mysql
      type: Directory
    name: home-rodrigo-projects-golang-expert-desafio-clean-architecture-.docker-mysql-host-0
  - name: c08d489344ea56c220f6fb0572d244a5ff3a4a75cb46bfbec7946822777bc0f2-pvc
    persistentVolumeClaim:
      claimName: c08d489344ea56c220f6fb0572d244a5ff3a4a75cb46bfbec7946822777bc0f2

