# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-3.4.4
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2023-09-07T23:28:49Z"
  labels:
    app: clean-arch
  name: clean-arch
spec:
  containers:
  - args:
    - mysqld
    image: docker.io/library/mysql:5.7
    name: mysql
    ports:
    - containerPort: 8080
      hostPort: 8080
    - containerPort: 50051
      hostPort: 50051
    - containerPort: 8000
      hostPort: 8000
    - containerPort: 5672
      hostPort: 5672
    - containerPort: 15672
      hostPort: 15672
    - containerPort: 3306
      hostPort: 3306
    resources: {}
    securityContext:
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
    volumeMounts:
    - mountPath: /var/lib/mysql
      name: 1962af37b2bc5a256e69074d2ba902f7ac759ce459a8f76978d4891ae5b7ae2c-pvc
  - args:
    - rabbitmq-server
    image: docker.io/library/rabbitmq:3-management
    name: rabbitmq
    resources: {}
    securityContext:
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
    volumeMounts:
    - mountPath: /var/lib/rabbitmq
      name: 9ce30ba451ce39fb2fc0d1bdd04c0fb10db868c7cdb33f8dc82b5d2d70a96ecd-pvc
  - image: localhost/rodrigoafernandes/golang-expert/desafio-clean-architecture:0.0.1
    name: desafio-clean-architecture
    resources: {}
    securityContext:
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
  restartPolicy: Never
  volumes:
  - name: 9ce30ba451ce39fb2fc0d1bdd04c0fb10db868c7cdb33f8dc82b5d2d70a96ecd-pvc
    persistentVolumeClaim:
      claimName: 9ce30ba451ce39fb2fc0d1bdd04c0fb10db868c7cdb33f8dc82b5d2d70a96ecd
  - name: 1962af37b2bc5a256e69074d2ba902f7ac759ce459a8f76978d4891ae5b7ae2c-pvc
    persistentVolumeClaim:
      claimName: 1962af37b2bc5a256e69074d2ba902f7ac759ce459a8f76978d4891ae5b7ae2c
status: {}

